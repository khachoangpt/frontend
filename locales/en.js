import localeEn from 'element-ui/lib/locale/lang/en'

const en = {
  dashboard: {
    holidayCompany: 'Company day off',
    salaryHistory: 'Salary history',
    month: 'Month',
    year: 'Year',
    salaryStructure: 'Salary structure',
    organization: 'Organization structure',
    generateSalary: 'Regenerate payroll',
  },

  login: {
    signIn: 'Sign in',
    password: 'Password',
    forgotPassword: 'Forgot password?',
    loginIncorrect: 'Login information is incorrect',
    loginError: 'Login error',
  },

  forgot: {
    forgotPassword: 'Forgot password',
    changePassword: 'Change password',
  },

  changePassword: {
    changePassword: 'Change password',
    oldPassword: 'Old password',
    newPassword: 'New password',
    confirmPassword: 'Confirm password',
  },

  sidebar: {
    dashboard: 'Dashboard',
    workingData: 'Working Data',
    timekeeping: 'Timekeeping',
    personnel: 'Personnel',
    request: 'Request',
    policy: 'Policy',
    salary: 'Payroll Accounting',
    synthetic: 'Department Data',
    collapse: 'Collapse',
    expand: 'Expand',
    logout: 'Logout',
    workingPolicy: 'Working rule',
    welfare: 'C&B',
    tax: 'Tax',
    insurance: 'Insurance',
    paidLeave: 'Paid leave',
    salaryPolicy: 'Salary',
  },
  datepicker: {
    chooseDay: 'Pick a day',
    date: 'Date',
  },

  personnel: {
    select: 'Select',
    addNewEmployee: 'Add new employee',
    fullName: 'Full name',
    dateOfBirth: 'Date of birth',
    gender: 'Gender',
    phone: 'Phone number',
    personalEmail: 'Personal email',
    role: 'Role',
    position: 'Position',
    grade: 'Grade',
    area: 'Area',
    workingType: 'Working type',
    manager: 'Manager',
    employeeType: 'Employee type',
    office: 'Office',
    startDate: 'Start date',
    endDate: 'End date',
    baseSalary: 'Base salary',
    salary: 'Salary',
    back: 'Back',
    addEmployee: 'Add employee',
    listOfPersonnel: 'List of personnel',
    search: 'Search',
    addNew: 'Add employee',
    genderList: {
      male: 'Male',
      female: 'Female',
    },
    roles: {
      Admin: 'Admin',
      Manager: 'Manager',
      User: 'Employee',
    },
    employeeTypes: {
      Trainee: 'Trainee',
      'Official Employee': 'Official Employee',
      'Probationary Staff': 'Probationary Staff',
    },
    validation: {
      fullName: 'Full name is not blank',
      birthDate: 'Date of birth is not blank',
      gender: 'Gender is not blank',
      phone: 'Phone number is not blank',
      personalEmail: 'Personal email is not blank',
      role: 'Role is not blank',
      position: 'Position is not blank',
      grade: 'Grade is not blank',
      area: 'Area is not blank',
      workingType: 'Working type is not blank',
      employeeType: 'Employee type is not blank',
      office: 'Office is not blank',
      startDate: 'Start date is not blank',
      endDate: 'End date is not blank',
      baseSalary: 'Base salary is not blank',
      salary: 'Salary is not blank',
      number: 'Input must be a number',
    },
    detail: {
      personalInfo: 'Personal information',
      changePassword: 'Change password',
      mainInfo: 'Main information',
      editMainInfo: 'Edit main information',
      close: 'Close',
      confirm: 'Confirm',
      fullName: 'Full Name',
      employeeId: 'Employee ID',
      startDate: 'Start date',
      endDate: 'End date',
      workingStatus: 'Working status',
      contractUrl: 'Current Contract',
      phoneNumber: 'Phone Number',
      grade: 'Grade',
      birthDate: 'Date of Birth',
      gender: 'Gender',
      maritalStatus: 'Marriage Status',
      office: 'Office',
      workingSchedule: 'Working Schedule',
      position: 'Position',
      area: 'Area',
      alone: 'Alone',
      married: 'Married',
      male: 'Male',
      female: 'Female',
      mainInfoDetail: 'Basic information of employees',
      jobInfo: 'Job Information',
      jobInfoDetail: 'Salary, job, career',
      taxInfo: 'Tax & insurance',
      taxInfoDetail: 'Tax & insurance information',
      bankInfo: 'Bank information',
      bankInfoDetail: 'Bank, address, account number',
      additionalInfo: 'Additional information',
      additionalInfoDetail: 'Address, ID card, LinkedIn, Facebook',
      workingHistoryInfo: 'Working history',
      workingHistoryInfoDetail: 'Company, location, time period',
      educationInfo: 'Education',
      educationInfoDetail: 'School, time, degree',
      editJobInformation: 'Edit job information',
      salary: 'Salary',
      baseSalary: 'Base salary',
      personnelClassification: 'Personnel classification',
      manager: 'Manager',
      role: 'Role',
      taxCode: 'Tax code',
      editTaxInfo: 'Edit tax and insurance',
      insurance: 'Insurance',
      insuranceNumber: 'Insurance number',
      placeRegistration: 'Place of registration',
      accountName: 'Account name',
      editBankInfo: 'Edit bank information',
      bank: 'Bank',
      address: 'Address',
      accountNumber: 'Account number',
      editAdditionalInfo: 'Edit additional information',
      currentAddress: 'Current address',
      placeOfBirth: 'Place of birth',
      permanentResidence: 'Place of residence',
      idCard: 'ID card',
      providedPlace: 'Provided place',
      providedDate: 'Provided date',
      nationality: 'Nationality',
      otherEmail: 'Other email',
      otherPhone: 'Other Phone number',
      addWorkingHistory: 'Add working history',
      company: 'Company',
      timePeriod: 'Time period',
      validateCompany: 'Company is not blank',
      validatePosition: 'Position is not blank',
      validateTime: 'Time is not blank',
      addEducationInfo: 'Add education information',
      school: 'School',
      degree: 'Degree',
      validateSchool: 'School is not blank',
      validateDegree: 'Degree is not blank',
      changeAvatar: 'Change avatar',
      seniority: 'Seniority',
      numberRelative: 'Number of dependents',
      newSalary: 'New',
      salaryApplyFrom: 'New working information apply from',
      applyNow: 'Apply now',
    },
    table: {
      personnel: 'Personnel',
    },
  },

  timekeeping: {
    workingDataOf: 'Working data of:',
    status: {
      normal: 'Normal',
      late: 'Late',
      soon: 'Leave soon',
      off: 'Off',
      paidLeave: 'Paid leave',
      half: 'Half day',
      holiday: 'Holiday',
      overtime: 'Overtime',
    },
    dialog: {
      title: 'Working data at ',
      totalTime: 'Total working time:',
      firstCheckIn: 'First check-in:',
      lastCheckOut: 'Last check-out:',
      history: 'Check-in/Check-out history',
      hour: 'hour',
      minute: 'minute',
    },
    message: {
      checkInSuccess: 'Check in successfully.',
      checkOutSuccess: 'Check out successfully.',
    },
  },

  workingData: {
    workingData: 'Working data',
    employee: 'Employee',
    id: 'ID',
    rowSelected: 'row selected',
    clear: 'clear',
  },

  request: {
    listRequest: 'List of requests',
    createRequest: 'Create request',
    dateFrom: 'From',
    dateTo: 'To',
    requestType: 'Request type',
    requestStatus: 'Request status',
    'Working Time': 'Working Time',
    'Paid Leave': 'Paid Leave',
    Nomination: 'Nomination',
    Advance: 'Advance',
    requestSend: 'Request send',
    requestReceive: 'Request receive',
    table: {
      rowSelected: 'rows selected',
      clear: 'clear',
      employeeName: 'Employee',
      employeeId: 'ID',
      request: 'Request',
      createDate: 'Create date',
      status: 'Status',
      duration: 'Duration',
    },
    dialog: {
      requestDetail: 'Request detail',
      employeeName: 'Employee',
      requestName: 'Request',
      employeeId: 'ID',
      status: 'Status',
      createDate: 'Create date',
      duration: 'Duration',
      checkedBy: 'Checked by',
      rejectComment: 'Reason for rejection',
      detail: 'Detail',
      approve: 'Approve',
      reject: 'Reject',
      check: 'Forward',
      chooseForward: 'Choose who you want to forward:',
      manager: 'Manager',
      close: 'Close',
      confirm: 'Confirm',
      requestWorkingTime: 'Edit working time',
      date: 'Date',
      content: 'Content',
      dayAndHour: 'Day & Hour',
      chooseDay: 'Choose a day',
      dateFrom: 'From',
      dateTo: 'To',
      sendRequest: 'Send request',
      requestPaidLeave: 'Paid leave',
      remainingDayOff: 'Number of remaining days off',
      reason: 'Reason',
      inputReason: 'Input reason',
      bonus: 'Bonus',
      salary: 'Salary',
      type: 'Type',
      note: 'Note',
    },
  },

  salary: {
    payrollAccounting: 'Payroll accounting',
    employeeName: 'Employee name',
    status: 'Status',
    myPayroll: 'My payroll',
    employeePayroll: "Employee's payroll",
    month: 'Month',
    position: 'Position',
    standardWorkingDay: 'Standard working day',
    actualWorkingDay: 'Actual working day',
    otPoint: 'OT point',
    deduction: 'Deduction',
    insurance: 'Insurance',
    tax: 'Tax',
    bonus: 'Bonus',
    advance: 'Advance',
    salaryReceived: 'Salary received',
    deductionDialog: {
      editDeduction: 'Edit deduction',
      date: 'Date',
      chooseDay: 'Pick a day',
      deductionType: 'Deduction type',
      amount: 'Amount',
      description: 'Description',
      close: 'Close',
      confirm: 'Confirm',
      'Work late': 'Work late',
      'Leave soon': 'Leave soon',
      'Business responsibility': 'Business responsibility',
      dateValidate: 'Date is not blank',
      amountValidate: 'Amount is not blank',
      numberValidate: 'Enter a number',
      deductionTypeValidate: 'Choose a deduction type',
      descriptionValidate: 'Description is not blank',
    },
    advanceDialog: {
      editAdvance: 'Edit advance',
    },
    bonusDialog: {
      editBonus: 'Edit bonus',
      bonusType: 'Bonus type',
      'Project bonus': 'Project bonus',
      'Reward bonus': 'Reward bonus',
      'KPI bonus': 'KPI bonus',
      'Out source bonus': 'Out source bonus',
    },
    confirmDeleteAdvance: 'Are you sure you want to delete this advance?',
    confirmDeleteDeduction: 'Are you sure you want to delete this deduction?',
    confirmDeleteBonus: 'Are you sure you want to delete this bonus?',
    warning: 'Warning',
    remove: 'Delete',
    close: 'Close',
    rejectPayroll: 'Reject payroll',
    enterReason: 'Enter reason:',
    reason: 'Reason',
    forward: 'Forward',
    reject: 'Reject',
    approve: 'Approve',
    forwardPayroll: 'Forward payroll',
    enterManagerForward: 'Enter manager to forward',
    manager: 'Manager',
  },
  synthetic: {
    syntheticHeader: 'Departmental employee management chart',
    totalEmployee: 'Total number of employees',
    age: 'Age',
    seniority: 'Seniority',
    reasonLeave: 'Statistics of reasons for leaving work',
    reasonOnLeave: 'Statistics of leave by year',
    male: 'Male',
    female: 'Female',
  },
  policy: {
    dialog: {
      policyDetail: 'Policy detail',
      policyType: 'Policy type',
      policyName: 'Policy name',
      createDate: 'Create date',
      effectiveDate: 'Effective date',
      status: 'Status',
      description: 'Content',
    },
  },

  message: {
    passwordChanged: 'Password was change. Check your email, please.',
    passwordChangeSuccess: 'Password changed successfully.',
    sendRequestSuccess: 'Submit request successfully',
    rejectRequestSuccess: 'The request was rejected',
    approveRequestSuccess: 'The request was approved',
    forwardRequestSuccess: 'The request was forwarded',
    editDeductionSuccess: 'Edit deduction successful',
    removeDeductionSuccess: 'Remove deduction successful',
    editAdvanceSuccess: 'Edit advance successful',
    removeAdvanceSuccess: 'Remove advance successful',
    editBonusSuccess: 'Edit bonus successful',
    removeBonusSuccess: 'Remove bonus successful',
    approvePayrollSuccess: 'Payroll was approved',
    rejectPayrollSuccess: 'Payroll was rejected',
    forwardPayrollSuccess: 'Payroll was forwarded',
    reGenerateSuccess: 'Regenerate payroll successful',
    addEmployeeSuccess: 'Add new employee successfully.',
    changeInformationSuccess: 'Change information successful',
    setHolidaySuccess: 'Set holiday successfully',
  },

  familyReason: 'Family Reason',
  unexpectedReason: 'Unexpected Reason',
  healthReason: 'Health Reason',
  other: 'Other',
  payrollDetail: 'Payroll details',
}

export default {
  ...en,
  ...localeEn,
}
